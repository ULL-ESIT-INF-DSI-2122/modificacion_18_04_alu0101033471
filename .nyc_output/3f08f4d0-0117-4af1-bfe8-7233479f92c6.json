{"/home/usuario/modificacion_18_04_alu0101033471/src/Solver/Solver.ts":{"path":"/home/usuario/modificacion_18_04_alu0101033471/src/Solver/Solver.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":25}},"3":{"start":{"line":11,"column":8},"end":{"line":11,"column":33}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":33}},"5":{"start":{"line":24,"column":8},"end":{"line":24,"column":41}},"6":{"start":{"line":27,"column":0},"end":{"line":27,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":32},"end":{"line":12,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":26},"end":{"line":19,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":12},"end":{"line":25,"column":5}},"line":23}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":1},"f":{"0":1,"1":1,"2":3},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/modificacion_18_04_alu0101033471/src/Solver/Solver.ts","sources":["/home/usuario/modificacion_18_04_alu0101033471/src/Solver/Solver.ts"],"names":[],"mappings":";;;AACA,MAAa,MAAM;IACf;;;OAGG;IACH,YAAoB,IAAc,EAAU,QAAkB;QAA1C,SAAI,GAAJ,IAAI,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAC9D,CAAC;IAED;;;OAGG;IACH,WAAW,CAAC,QAAkB;QAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,KAAK;QACH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;CACF;AAtBH,wBAsBG","sourcesContent":["\nexport class Solver {\n    /**\n     * The context has a reference to a Strategy object. It should only works\n     * with strategies through the Strategy interface\n     */\n    constructor(private data: number[], private strategy: Strategy) {\n    }\n  \n    /**\n     * A setter is required in order to change the strategy in execution time\n     * @param strategy Current strategy applied\n     */\n    setStrategy(strategy: Strategy) {\n      this.strategy = strategy;\n    }\n  \n    /**\n     * The context delegates some work to the Strategy object\n     */\n    logic() {\n      this.strategy.execute(this.data);\n    }\n  }\n  \n  /**\n   * Common interface to all Strategy objects. The context uses this\n   * interface to work with strategies\n   */\nexport interface Strategy {\n    execute(data: number[]): void;\n  }"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3eb01b158ad16b242811a0d80f3266a7934a7e58","contentHash":"5555bcf2a76bd03a9dc34f581c133f375d9a5339cb6a5658380db70415ad7482"},"/home/usuario/modificacion_18_04_alu0101033471/src/BubbleSort/bubblesort.ts":{"path":"/home/usuario/modificacion_18_04_alu0101033471/src/BubbleSort/bubblesort.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":9,"column":8},"end":{"line":9,"column":24}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":28}},"4":{"start":{"line":18,"column":23},"end":{"line":18,"column":33}},"5":{"start":{"line":19,"column":8},"end":{"line":27,"column":9}},"6":{"start":{"line":19,"column":21},"end":{"line":19,"column":22}},"7":{"start":{"line":20,"column":12},"end":{"line":26,"column":13}},"8":{"start":{"line":20,"column":25},"end":{"line":20,"column":26}},"9":{"start":{"line":21,"column":16},"end":{"line":25,"column":17}},"10":{"start":{"line":22,"column":31},"end":{"line":22,"column":42}},"11":{"start":{"line":23,"column":20},"end":{"line":23,"column":50}},"12":{"start":{"line":24,"column":20},"end":{"line":24,"column":43}},"13":{"start":{"line":28,"column":8},"end":{"line":28,"column":24}},"14":{"start":{"line":35,"column":8},"end":{"line":35,"column":76}},"15":{"start":{"line":38,"column":0},"end":{"line":38,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":18},"end":{"line":10,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":20},"end":{"line":29,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":18},"end":{"line":36,"column":5}},"line":34}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":16},"end":{"line":25,"column":17}},"type":"if","locations":[{"start":{"line":21,"column":16},"end":{"line":25,"column":17}},{"start":{"line":21,"column":16},"end":{"line":25,"column":17}}],"line":21}},"s":{"0":1,"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":12,"8":12,"9":68,"10":7,"11":7,"12":7,"13":2,"14":1,"15":1},"f":{"0":2,"1":2,"2":1},"b":{"0":[7,61]},"inputSourceMap":{"version":3,"file":"/home/usuario/modificacion_18_04_alu0101033471/src/BubbleSort/bubblesort.ts","sources":["/home/usuario/modificacion_18_04_alu0101033471/src/BubbleSort/bubblesort.ts"],"names":[],"mappings":";;;AAGA;;GAEG;AACH,MAAa,UAAU;IAEtB;QADQ,UAAK,GAAa,EAAE,CAAC;IAE7B,CAAC;IACD;;;;OAIG;IACH,OAAO,CAAC,MAAgB;QACvB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACpB,IAAI,QAAQ,GAAa,IAAI,CAAC,KAAK,CAAC;QACpC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAE5C,IAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBACjC,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACvB,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC9B,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;iBACvB;aACD;SACD;QACD,OAAO,QAAQ,CAAC;IACjB,CAAC;IACD;;;OAGG;IACA,OAAO,CAAC,IAAc;QACpB,OAAO,CAAC,GAAG,CAAC,kCAAkC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACtE,CAAC;CACF;AA/BH,gCA+BG","sourcesContent":["\nimport { Solver, Strategy } from \"../Solver/Solver\";\n\n/**\n * Clase Bubblesort que ordena una lista de numeros\n */\nexport class BubbleSort implements Strategy {\n\tprivate lista: number[] = [];\n\tconstructor(){\n\t}\n\t/**\n\t * metodo que ordena una lista de numeros\n\t * @param listaa lista de numeros a ordenar\n\t * @return una lista de numeros ordenada\n\t */\n\tordenar(listaa: number[]){\n\t\tthis.lista = listaa;\n\t\tlet auxLista: number[] = this.lista;\n\t\tfor(let i = 0; i < auxLista.length; i++) {\n\t\t\tfor(let j = 0; j < auxLista.length - 1; j++) {\n\t\n\t\t\t\tif(auxLista[j] > auxLista[j + 1]) {\n\t\t\t\t\tlet swap = auxLista[j];\n\t\t\t\t\tauxLista[j] = auxLista[j + 1];\n\t\t\t\t\tauxLista[j + 1] = swap;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn auxLista;\n\t}\n\t/**\n\t * permite iniciar la ejecuci√≥n de una estrategia \n\t * @param data lista que recive de la clase Solver\n\t */\n    execute(data: number[]) {\n      console.log(`algoritmo BubbleSort aplicado: ${this.ordenar(data)}`);\n    }\n  }\n  "]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"966810a28794660a09f254f8c9bef7c3f499c3a3","contentHash":"19ea240d5f1529d42a882ef7cede073c0b576316064bc3e449762a426c9f2dfa"},"/home/usuario/modificacion_18_04_alu0101033471/src/index.ts":{"path":"/home/usuario/modificacion_18_04_alu0101033471/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":55}},"4":{"start":{"line":6,"column":20},"end":{"line":6,"column":52}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":96}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":25}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":58}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":25}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/modificacion_18_04_alu0101033471/src/index.ts","sources":["/home/usuario/modificacion_18_04_alu0101033471/src/index.ts"],"names":[],"mappings":";;;AAAA,4CAAmD;AACnD,wDAAqD;AACrD,qDAAkD;AAErC,QAAA,QAAQ,GAAG,IAAI,eAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAE,IAAI,uBAAU,EAAE,CAAC,CAAC;AAC3E,gBAAQ,CAAC,KAAK,EAAE,CAAC;AAEjB,gBAAQ,CAAC,WAAW,CAAC,IAAI,qBAAS,EAAE,CAAC,CAAC;AACtC,gBAAQ,CAAC,KAAK,EAAE,CAAC","sourcesContent":["import { Solver, Strategy } from \"./Solver/Solver\";\nimport { BubbleSort } from \"./BubbleSort/bubblesort\";\nimport { Mergesort } from \"./MergeSort/mergesort\";\n\nexport const mySolver = new Solver([1, 2, 3, 5,4,9,8,7], new BubbleSort());\nmySolver.logic();\n\nmySolver.setStrategy(new Mergesort());\nmySolver.logic();\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6ef571268773ee30e63c937834e4eaf785eb08d9","contentHash":"9e8c494d317bd8b4d6ac7df34445dc534eb0c2cca2fd8b814e4b099b77e07a0e"},"/home/usuario/modificacion_18_04_alu0101033471/src/MergeSort/mergesort.ts":{"path":"/home/usuario/modificacion_18_04_alu0101033471/src/MergeSort/mergesort.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":16,"column":25},"end":{"line":16,"column":52}},"3":{"start":{"line":17,"column":18},"end":{"line":17,"column":44}},"4":{"start":{"line":18,"column":19},"end":{"line":18,"column":42}},"5":{"start":{"line":19,"column":8},"end":{"line":22,"column":9}},"6":{"start":{"line":20,"column":12},"end":{"line":20,"column":35}},"7":{"start":{"line":21,"column":12},"end":{"line":21,"column":37}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":39}},"9":{"start":{"line":31,"column":23},"end":{"line":31,"column":24}},"10":{"start":{"line":32,"column":24},"end":{"line":32,"column":25}},"11":{"start":{"line":33,"column":24},"end":{"line":33,"column":34}},"12":{"start":{"line":34,"column":25},"end":{"line":34,"column":36}},"13":{"start":{"line":35,"column":23},"end":{"line":35,"column":25}},"14":{"start":{"line":36,"column":8},"end":{"line":61,"column":9}},"15":{"start":{"line":37,"column":26},"end":{"line":37,"column":39}},"16":{"start":{"line":38,"column":27},"end":{"line":38,"column":42}},"17":{"start":{"line":39,"column":12},"end":{"line":60,"column":13}},"18":{"start":{"line":40,"column":16},"end":{"line":53,"column":17}},"19":{"start":{"line":41,"column":20},"end":{"line":41,"column":43}},"20":{"start":{"line":42,"column":20},"end":{"line":42,"column":31}},"21":{"start":{"line":45,"column":20},"end":{"line":52,"column":21}},"22":{"start":{"line":46,"column":24},"end":{"line":46,"column":47}},"23":{"start":{"line":47,"column":24},"end":{"line":47,"column":35}},"24":{"start":{"line":50,"column":24},"end":{"line":50,"column":48}},"25":{"start":{"line":51,"column":24},"end":{"line":51,"column":36}},"26":{"start":{"line":56,"column":16},"end":{"line":59,"column":17}},"27":{"start":{"line":57,"column":20},"end":{"line":57,"column":44}},"28":{"start":{"line":58,"column":20},"end":{"line":58,"column":32}},"29":{"start":{"line":62,"column":8},"end":{"line":62,"column":24}},"30":{"start":{"line":69,"column":8},"end":{"line":69,"column":74}},"31":{"start":{"line":72,"column":0},"end":{"line":72,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":18},"end":{"line":8,"column":21}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":18},"end":{"line":24,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":23},"end":{"line":63,"column":5}},"line":30},"3":{"name":"(anonymous_3)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":18},"end":{"line":70,"column":5}},"line":68}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":22,"column":9}},{"start":{"line":19,"column":8},"end":{"line":22,"column":9}}],"line":19},"1":{"loc":{"start":{"line":36,"column":15},"end":{"line":36,"column":61}},"type":"binary-expr","locations":[{"start":{"line":36,"column":15},"end":{"line":36,"column":35}},{"start":{"line":36,"column":39},"end":{"line":36,"column":61}}],"line":36},"2":{"loc":{"start":{"line":39,"column":12},"end":{"line":60,"column":13}},"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":60,"column":13}},{"start":{"line":39,"column":12},"end":{"line":60,"column":13}}],"line":39},"3":{"loc":{"start":{"line":40,"column":16},"end":{"line":53,"column":17}},"type":"if","locations":[{"start":{"line":40,"column":16},"end":{"line":53,"column":17}},{"start":{"line":40,"column":16},"end":{"line":53,"column":17}}],"line":40},"4":{"loc":{"start":{"line":45,"column":20},"end":{"line":52,"column":21}},"type":"if","locations":[{"start":{"line":45,"column":20},"end":{"line":52,"column":21}},{"start":{"line":45,"column":20},"end":{"line":52,"column":21}}],"line":45},"5":{"loc":{"start":{"line":56,"column":16},"end":{"line":59,"column":17}},"type":"if","locations":[{"start":{"line":56,"column":16},"end":{"line":59,"column":17}},{"start":{"line":56,"column":16},"end":{"line":59,"column":17}}],"line":56}},"s":{"0":1,"1":1,"2":17,"3":17,"4":17,"5":17,"6":7,"7":7,"8":17,"9":18,"10":18,"11":18,"12":18,"13":18,"14":18,"15":60,"16":60,"17":60,"18":32,"19":1,"20":1,"21":31,"22":29,"23":29,"24":2,"25":2,"26":28,"27":28,"28":28,"29":18,"30":2,"31":1},"f":{"0":2,"1":17,"2":18,"3":2},"b":{"0":[7,10],"1":[78,46],"2":[32,28],"3":[1,31],"4":[29,2],"5":[28,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/modificacion_18_04_alu0101033471/src/MergeSort/mergesort.ts","sources":["/home/usuario/modificacion_18_04_alu0101033471/src/MergeSort/mergesort.ts"],"names":[],"mappings":";;;AACA;;GAEG;AACH,MAAa,SAAS;IACpB,gBAAc,CAAC;IAChB;;;;;OAKG;IACF,MAAM,CAAC,KAAe;QACtB,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC7C,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;QACrC,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,UAAU,GAAG,CAAC,EAAE;YACnB,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACzB;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAC/B,CAAC;IACH;;;;OAIG;IACF,OAAO,CAAC,GAAa,EAAE,IAAc;QACpC,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC;QAC3B,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7B,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,OAAO,QAAQ,GAAG,SAAS,IAAI,SAAS,GAAG,UAAU,EAAE;YACtD,IAAI,OAAO,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC5B,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/B,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC1B,IAAI,QAAQ,KAAK,SAAS,EAAE;oBAC3B,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACvB,QAAQ,EAAE,CAAC;iBACX;qBAAM;oBACL,IAAI,OAAO,IAAI,QAAQ,EAAE;wBACxB,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACvB,QAAQ,EAAE,CAAC;qBACX;yBAAM;wBACN,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACxB,SAAS,EAAE,CAAC;qBACZ;iBACF;aACD;iBAAM;gBACL,IAAI,QAAQ,KAAK,SAAS,EAAE;oBAC3B,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACxB,SAAS,EAAE,CAAC;iBACZ;aACD;SACF;QACD,OAAO,QAAQ,CAAC;IACjB,CAAC;IACC;;;WAGC;IACH,OAAO,CAAC,IAAc;QACpB,OAAO,CAAC,GAAG,CAAC,iCAAiC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACnE,CAAC;CACF;AA7DD,8BA6DC","sourcesContent":["import { Solver, Strategy } from \"../Solver/Solver\";\n/**\n * Clase MergeSort que ordena una lista de numeros\n */\nexport class Mergesort implements Strategy{\n  constructor(){}\n\t/**\n\t * M√©todo que divide la lista de numeros en dos partes una con los numeros peque√±os \n\t * y otra con los mayores\n\t * @param items lista de numeros ordenar\n\t * @return llamada al siguiente m√©todo que ordena\n\t */\n  divide(items: number[]): number[] {\n\t\tvar halfLength = Math.ceil(items.length / 2);\n\t\tvar low = items.slice(0, halfLength);\n\t\tvar high = items.slice(halfLength);\n\t\tif (halfLength > 1) {\n\t\t\tlow = this.divide(low);\n\t\t\thigh = this.divide(high);\n\t\t}\n\t\treturn this.combine(low, high);\n  }\n/**\n * M√©todo qu combina las dos lista de numeros de forma ordenada\n * @param low lista con los numeros peque√±os\n * @param high lista con los numeros grandes\n */\n\tcombine(low: number[], high: number[]): number[] {\n\t\tvar indexLow = 0;\n\t\tvar indexHigh = 0;\n\t\tvar lengthLow = low.length;\n\t\tvar lengthHigh = high.length;\n\t\tvar combined = [];\n\t\twhile (indexLow < lengthLow || indexHigh < lengthHigh) {\n\t\t\tvar lowItem = low[indexLow];\n\t\t\tvar highItem = high[indexHigh];\n\t\t\tif (lowItem !== undefined) {\n\t\t\t\tif (highItem === undefined) {\n\t\t\t\t\tcombined.push(lowItem);\n\t\t\t\t\tindexLow++;\n\t\t\t\t} else {\n\t\t\t\t\t\tif (lowItem <= highItem) {\n\t\t\t\t\t\t\tcombined.push(lowItem);\n\t\t\t\t\t\t\tindexLow++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcombined.push(highItem);\n\t\t\t\t\t\t\tindexHigh++;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t\tif (highItem !== undefined) {\n\t\t\t\t\t\tcombined.push(highItem);\n\t\t\t\t\t\tindexHigh++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\treturn combined;\n\t}\n   /**\n\t\t* Permite iniciar la ejecuci√≥n de una estrategia\n\t\t* @param data lista que recibe de la clase Solver\n\t\t*/ \n\texecute(data: number[]) {\n\t\t\tconsole.log(`algoritmo MergeSort aplicado: ${this.divide(data)}`);\n\t\t}\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cb5b43c09fda6e1607a51498bbc4c04e61416854","contentHash":"3c6c22754bd77f2ecb6959033cc6a26d51d09df0c05027ad0469c41d3ddc3bd9"}}